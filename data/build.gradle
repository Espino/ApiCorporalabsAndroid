apply plugin: Plugins.kotlinAndroid
apply plugin: Plugins.androidLibrary
apply plugin: Plugins.kotlinKapt
apply plugin: Plugins.kotlinParcelize

android {
    compileSdk 31

    defaultConfig {
        minSdk 27
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            buildConfigField("String", "BASE_URL", MY_URL)
            debuggable true
        }

        release {
            buildConfigField("String", "BASE_URL", MY_URL)

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = "$jvmTarget11"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(":domain")

    //ANDROID
    implementation "androidx.core:core-ktx:$android_core_ktx"
    implementation "androidx.appcompat:appcompat:$android_appcompat"
    implementation "com.google.android.material:material:$android_material"
    implementation "androidx.paging:paging-runtime:$android_paging_runtime"

    // shared preferences
    implementation "androidx.preference:preference-ktx:$android_preference_ktx"
    implementation "androidx.datastore:datastore-preferences:$android_datastore_preferences"

    //LifeCycle (ViewModel + LiveData ktx)
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$android_lifecycle_ktx"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$android_lifecycle_ktx"

    //========================================================================================

    //DAGGER
    implementation "com.google.dagger:hilt-android:$dagger_hilt"
    kapt "com.google.dagger:hilt-compiler:$dagger_hilt"

    //========================================================================================

    //RETROFIT
    api "com.squareup.retrofit2:retrofit:$squareup_retrofit2"
    api "com.squareup.retrofit2:converter-gson:$squareup_retrofit2"
    api "com.squareup.retrofit2:adapter-rxjava2:$squareup_retrofit2"
    api "com.squareup.okhttp3:logging-interceptor:$squareup_okhttp3"
    api "com.squareup.retrofit2:converter-moshi:$squareup_retrofit2"

    //========================================================================================

    // Experimental
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$jetbrains_kotlinx_play_services"
    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$jetbrains_kotlinx_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$jetbrains_kotlinx_coroutines"

    //========================================================================================
//LOGS
    // Timber
    implementation "com.jakewharton.timber:timber:$jakewharton_timber"

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}